//
//  MyClassUsingC.m
//  Using C Arrays
//
//  Created by Richard Mayer on 24/06/2013.
//  Copyright (c) 2013 Richard Mayer. All rights reserved.
//

#import "NSDictionaryAsConst.h"

// Here's the real core of it, where we define all the fruit we want to use
// It's a C array of FruitDefinition structs
// Note that the first item of each struct definition is one of the enum type
// defined in the .h
const FruitDefinition fruitDefsArray [] =
{
	{FruitTypeApple,        @"Apple",	@"green and round"},
	{FruitTypeBanana,		@"Banana",  @"yellow and curved"},
    
    // Sentinal FruitTypeUnknown marks end of the array
    {FruitTypeUnknown,      nil,        nil}
};

@implementation NSDictionaryAsConst

// And here's how we can use it to return a dictionary with a single item,
// indexed by the fruit type enum value, which in turn is a dictionary
// representing the fruit definition struct
- (NSDictionary*)dictionaryForFruit:(FruitType)aFruit
{
	NSMutableDictionary* fruitDict = nil;
	NSDictionary* fruitPropertiesDict = nil;
    
    for (const FruitDefinition *fruitDefinition = fruitDefsArray;
         fruitDefinition->type != FruitTypeUnknown;
         ++fruitDefinition)
    {    
        if (fruitDefinition->type == aFruit)
        {
            fruitPropertiesDict = [NSDictionary dictionaryWithObjectsAndKeys:
                                   fruitDefinition->name, @"Name",
                                   fruitDefinition->colour, @"Colour",
                                   nil];
            break;
        }
    }
	
    if (fruitPropertiesDict != nil) {
        fruitDict = [NSDictionary dictionaryWithObject:fruitPropertiesDict
                                                forKey:[NSNumber numberWithInt:aFruit]];
    }
    
    return fruitDict;
}

@end
