//
//  MyClassUsingC.h
//  Using C Arrays
//
//  Created by Richard Mayer on 24/06/2013.
//  Copyright (c) 2013 Richard Mayer. All rights reserved.
//

#import <Foundation/Foundation.h>

// Useful for working with a C array
#define SIZE_OF(MY_C_ARRAY) sizeof(MY_C_ARRAY) / sizeof(MY_C_ARRAY[0])

// First we define some enumerated type. They don't even have to be mutually
// exclusive - although they are defined exclusively, they might actually
// resolve to the same type. e.g. FruitDefault
typedef enum {
	FruitTypeUnknown = -1,
    
	FruitTypeApple,
    FruitTypeBanana,
    
    FruitTypeFirst = FruitTypeApple,
    FruitTypeLast = FruitTypeBanana,
    
    FruitTypeDefault = FruitTypeApple
} FruitType;

// Next, efine a struct, indexed by the enum type, with whatever props are
// associated with the enum type
typedef struct {
	FruitType		type;
	NSString*		name;
	NSString*		colour;  // here of course you could nest as many structs as deep as you want
} FruitDefinition;

// And declare a constant array of them
extern const FruitDefinition fruitDefsArray [];

@interface NSDictionaryAsConst : NSObject

- (NSDictionary*)dictionaryForFruit:(FruitType)aFruit;

@end
